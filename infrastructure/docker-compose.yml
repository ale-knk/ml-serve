services:
  mlserve-app:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.api
    container_name: mlserve-app
    ports:
      - "${API_PORT}:8000"
    env_file:
      - ../.env
    depends_on:
      - postgres
    networks:
      - mlserve-network

  postgres:
    image: postgres:15
    container_name: mlserve-db
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - ../.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlserve-network

  mlflow:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.mlflow
    container_name: mlserve-mlflow
    ports:
      - "${MLFLOW_PORT}:5000"
    env_file:
      - ../.env
    depends_on:
      - postgres
    volumes:
      - ../mlruns:/mlflow/mlruns
    command: >
      mlflow server
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?options=-csearch_path=${MLFLOW_BACKEND_SCHEMA}
      --default-artifact-root /mlflow/mlruns
      --host 0.0.0.0
      --port 5000
    networks:
      - mlserve-network

  training:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.training

    container_name: mlserve-training
    command: ["python", "training/train.py"]
    env_file:
      - ../.env
    depends_on:
      - mlflow
    networks:
      - mlserve-network

networks:
  mlserve-network:
    driver: bridge

volumes:
  pgdata:
